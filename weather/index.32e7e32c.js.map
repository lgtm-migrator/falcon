{"mappings":"imBAsBA,IAAAA,EACAC,mFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,wCCnBTE,EAAAC,QAAiB,IAAAC,IAAoB,MAAQC,EAAA,SAAAC,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,cCApGL,EAAA,SAAAM,SAA8CC,KAAKC,MAAM,uJCAzD,IAAAC,EAAAT,EAAA,sBAGAU,SAASC,eAAe,OAAQC,UAAY,GAsB5C,MAAMC,EAAwC,IAAIC,IAElDD,EAAME,IAAI,QAAS,CACjBC,MAAO,gBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,WAEpBP,EAAME,IAAI,YAAa,CACrBC,MAAO,YACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,aAClBC,UAAW,CACTC,KAAM,YACNC,KAAM,GACNC,OAAQ,EAAC,IAAM,KACfC,OAAQ,OAGZZ,EAAME,IAAI,WAAY,CACpBC,MAAO,sBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,WAClBC,UAAW,CACTC,KAAM,WACNC,KAAM,GACNC,OAAQ,EAAC,GAAK,IACdC,OAAQ,OAGZZ,EAAME,IAAI,WAAY,CACpBC,MAAO,sBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,WAClBC,UAAW,CACTC,KAAM,WACNC,KAAM,GACNC,OAAQ,EAAC,GAAK,IACdC,OAAQ,OAGZZ,EAAME,IAAI,gBAAiB,CACzBC,MAAO,8BACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,iBAClBC,UAAW,CACTC,KAAM,gBACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,IACZC,OAAQ,SAGZZ,EAAME,IAAI,OAAQ,CAChBC,MAAO,kCACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,QAClBC,UAAW,CACTC,KAAM,OACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,IACZC,OAAQ,SAGZZ,EAAME,IAAI,OAAQ,CAChBC,MAAO,2BACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,QAClBC,UAAW,CACTC,KAAM,OACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,MACZC,OAAQ,SAIZ,MAAMC,EAAK,IAAIjB,EAAAkB,QAAQ3B,EAAA,UAEvB,IAAIS,EAAAmB,IAAIf,EAAOa,EAAI,CACjBG,OAAQ,CAAEC,SAAU,KACpBC,GAAI,IAAOrB,SAASC,eAAe,WAAYqB,MAAMC,QAAU","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-c81862ac70aaec49.js","node_modules/@parcel/runtime-js/lib/runtime-82e1ea993f9b7e85.js","weather/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"k9NSc\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jhOLF\\\":\\\"index.32e7e32c.js\\\",\\\"k9NSc\\\":\\\"weather-500k.12a1ff8e.arrow\\\",\\\"j3hbc\\\":\\\"index.a76efc50.js\\\"}\"));","import { App, ArrowDB, Views } from \"../src\";\nimport { createElement } from \"../flights/utils\";\n\ndocument.getElementById(\"app\")!.innerText = \"\";\n\ntype ViewName =\n  | \"ELEVATION\"\n  | \"TEMP_MIN\"\n  | \"TEMP_MAX\"\n  | \"PRECIPITATION\"\n  | \"WIND\"\n  | \"SNOW\"\n  | \"COUNT\";\n\ntype DimensionName =\n  | \"ELEVATION\"\n  | \"LATITUDE\"\n  | \"LONGITUDE\"\n  | \"RECORD_DATE\"\n  | \"TEMP_MIN\"\n  | \"TEMP_MAX\"\n  | \"PRECIPITATION\"\n  | \"WIND\"\n  | \"SNOW\";\n\nconst views: Views<ViewName, DimensionName> = new Map();\n\nviews.set(\"COUNT\", {\n  title: \"Days selected\",\n  type: \"0D\",\n  el: createElement(\"count\")\n});\nviews.set(\"ELEVATION\", {\n  title: \"Elevation\",\n  type: \"1D\",\n  el: createElement(\"elevation\"),\n  dimension: {\n    name: \"ELEVATION\",\n    bins: 25,\n    extent: [-100, 3000],\n    format: \"d\"\n  }\n});\nviews.set(\"TEMP_MIN\", {\n  title: \"Minimum Temperature\",\n  type: \"1D\",\n  el: createElement(\"tempmin\"),\n  dimension: {\n    name: \"TEMP_MIN\",\n    bins: 25,\n    extent: [-10, 50],\n    format: \"d\"\n  }\n});\nviews.set(\"TEMP_MAX\", {\n  title: \"Maximum Temperature\",\n  type: \"1D\",\n  el: createElement(\"tempmax\"),\n  dimension: {\n    name: \"TEMP_MAX\",\n    bins: 25,\n    extent: [-10, 50],\n    format: \"d\"\n  }\n});\nviews.set(\"PRECIPITATION\", {\n  title: \"Precipitation in Millimeter\",\n  type: \"1D\",\n  el: createElement(\"precipitation\"),\n  dimension: {\n    name: \"PRECIPITATION\",\n    bins: 25,\n    extent: [0, 12],\n    format: \".1f\"\n  }\n});\nviews.set(\"WIND\", {\n  title: \"Wind Speed in Meters per Second\",\n  type: \"1D\",\n  el: createElement(\"wind\"),\n  dimension: {\n    name: \"WIND\",\n    bins: 25,\n    extent: [0, 12],\n    format: \".1f\"\n  }\n});\nviews.set(\"SNOW\", {\n  title: \"Snow Depth in Millimeter\",\n  type: \"1D\",\n  el: createElement(\"snow\"),\n  dimension: {\n    name: \"SNOW\",\n    bins: 25,\n    extent: [0, 1400],\n    format: \".1f\"\n  }\n});\n\nconst db = new ArrowDB(require(\"../data/weather-500k.arrow\"));\n\nnew App(views, db, {\n  config: { idleTime: 8000 },\n  cb: () => (document.getElementById(\"loading\")!.style.display = \"none\")\n});\n"],"names":["$21c209811a9b5a39$export$6503ec6e8aabbaf","$21c209811a9b5a39$export$f7ad0328861e2f03","$21c209811a9b5a39$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$c2Y2V","document","getElementById","innerText","$c5b73c1162268a0e$var$views","Map","set","title","type","el","$7FriB","createElement","dimension","name","bins","extent","format","$c5b73c1162268a0e$var$db","ArrowDB","App","config","idleTime","cb","style","display"],"version":3,"file":"index.32e7e32c.js.map"}