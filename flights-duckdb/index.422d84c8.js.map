{"mappings":"imBAsBA,IAAuBA,EACDC,mFArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sLCGzDC,SAASC,eAAe,OAAQC,UAAY,GAsB5C,MAAMC,EAAwC,IAAIC,IAElDD,EAAME,IAAI,QAAS,CACjBC,MAAO,mBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,WAEpBP,EAAME,IAAI,UAAW,CACnBC,MAAO,cACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,QAClBC,UAAW,CACTC,KAAM,UACNC,KAAM,GAINC,OAAQ,CAAC,IAAIC,KAAK,KAAM,GAAI,IAAIC,UAAW,IAAID,KAAK,KAAM,EAAG,IAAIC,WAEjEC,OAAQ,WACRC,MAAM,KAGVf,EAAME,IAAI,WAAY,CACpBC,MAAO,oBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,YAClBC,UAAW,CACTC,KAAM,WACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,KACZG,OAAQ,OAGZd,EAAME,IAAI,WAAY,CACpBC,MAAO,eACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,WAClBC,UAAW,CACTC,KAAM,WACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,IACZG,OAAQ,UAGZd,EAAME,IAAI,WAAY,CACpBC,MAAO,iBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,aAClBC,UAAW,CACTC,KAAM,WACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,IACZG,OAAQ,UAyBZd,EAAME,IAAI,WAAY,CACpBC,MAAO,qBACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,WAClBC,UAAW,CACTC,KAAM,WACNC,KAAM,GACNC,OAAQ,CAAC,EAAG,KACZG,OAAQ,OAGZd,EAAME,IAAI,sBAAuB,CAC/BC,MAAO,yCACPC,KAAM,KACNC,GAAIC,EAAAC,cAAc,SAClBS,WAAY,CACV,CACEb,MAAO,kBACPM,KAAM,YACNC,KAAM,GACNC,OAAQ,EAAC,GAAK,IACdG,OAAQ,KAEV,CACEX,MAAO,gBACPM,KAAM,YACNC,KAAM,GACNC,OAAQ,EAAC,GAAK,IACdG,OAAQ,QAKd,MAAMG,EAAQ,IAAIhB,IAElBgB,EAAMf,IAAI,UAAW,6BC1IrBgB,EAAc,IAAAC,IAAuB,MAAQ1B,EAAA,SAAA2B,QAA6C,SAAOC,OAAAC,KAAAC,KAAGC,WD8IpG,MAAMC,EAAK,IAAIC,EAAAC,OAAgCT,EAAKD,GAEpD,IAAIS,EAAAE,IAAI5B,EAAOyB,EAAI,CACjBI,OAAQ,CACNC,SAAU,IACVC,WAAY,aAEdC,GAAE,IAASnC,SAASC,eAAe,WAAYmC,MAAMC,QAAU","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-79438f0015bae160.js","flights-duckdb/index.ts","node_modules/@parcel/runtime-js/lib/runtime-2ac08d5574dd5b17.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cjkFW\\\":\\\"index.422d84c8.js\\\",\\\"gOMU6\\\":\\\"flights-10m.becad501.parquet\\\",\\\"kejkk\\\":\\\"index.3609ce3e.js\\\"}\"));","import { createElement } from \"../flights/utils\";\nimport { App, DuckDB, Views } from \"../src\";\n\ndocument.getElementById(\"app\")!.innerText = \"\";\n\ntype ViewName =\n  | \"DISTANCE\"\n  | \"DEP_TIME\"\n  | \"ARR_TIME\"\n  | \"AIR_TIME\"\n  | \"ARR_DELAY\"\n  | \"DEP_DELAY\"\n  | \"FL_DATE\"\n  | \"DEP_DELAY_ARR_DELAY\"\n  | \"COUNT\";\n\ntype DimensionName =\n  | \"ARR_DELAY\"\n  | \"ARR_TIME\"\n  | \"DISTANCE\"\n  | \"DEP_DELAY\"\n  | \"AIR_TIME\"\n  | \"DEP_TIME\"\n  | \"FL_DATE\";\n\nconst views: Views<ViewName, DimensionName> = new Map();\n\nviews.set(\"COUNT\", {\n  title: \"Flights selected\",\n  type: \"0D\",\n  el: createElement(\"count\")\n});\nviews.set(\"FL_DATE\", {\n  title: \"Flight Date\",\n  type: \"1D\",\n  el: createElement(\"date\"),\n  dimension: {\n    name: \"FL_DATE\",\n    bins: 25,\n    // note that months start at 0!\n    // extent: [new Date(2005, 11, 25).getTime(), new Date(2006, 1, 5).getTime()], // 10k\n    // extent: [new Date(2005, 11, 25).getTime(), new Date(2006, 2, 5).getTime()], // 1m\n    extent: [new Date(2006, 11, 10).getTime(), new Date(2007, 1, 10).getTime()], // 10m\n    // extent: [new Date(2005, 11, 29).getTime(), new Date(2006, 1, 5).getTime()], // 200k\n    format: \"%Y-%m-%d\",\n    time: true\n  }\n});\nviews.set(\"DISTANCE\", {\n  title: \"Distance in Miles\",\n  type: \"1D\",\n  el: createElement(\"distance\"),\n  dimension: {\n    name: \"DISTANCE\",\n    bins: 25,\n    extent: [0, 4000],\n    format: \"d\"\n  }\n});\nviews.set(\"ARR_TIME\", {\n  title: \"Arrival Time\",\n  type: \"1D\",\n  el: createElement(\"arrival\"),\n  dimension: {\n    name: \"ARR_TIME\",\n    bins: 24,\n    extent: [0, 24],\n    format: \".1~f\"\n  }\n});\nviews.set(\"DEP_TIME\", {\n  title: \"Departure Time\",\n  type: \"1D\",\n  el: createElement(\"departure\"),\n  dimension: {\n    name: \"DEP_TIME\",\n    bins: 24,\n    extent: [0, 24],\n    format: \".1~f\"\n  }\n});\n// views.set(\"DEP_DELAY\", {\n//   title: \"Departure Delay in Minutes\",\n//   type: \"1D\",\n//   el: createElement(\"dep_delay\"),\n//   dimension: {\n//     name: \"DEP_DELAY\",\n//     bins: 25,\n//     extent: [-20, 60],\n//     format: \".1~f\"\n//   }\n// });\n// views.set(\"ARR_DELAY\", {\n//   title: \"Arrival Delay in Minutes\",\n//   type: \"1D\",\n//   el: createElement(\"arr_delay\"),\n//   dimension: {\n//     name: \"ARR_DELAY\",\n//     bins: 25,\n//     extent: [-20, 60],\n//     format: \".1~f\"\n//   }\n// });\nviews.set(\"AIR_TIME\", {\n  title: \"Airtime in Minutes\",\n  type: \"1D\",\n  el: createElement(\"airtime\"),\n  dimension: {\n    name: \"AIR_TIME\",\n    bins: 25,\n    extent: [0, 500],\n    format: \"d\"\n  }\n});\nviews.set(\"DEP_DELAY_ARR_DELAY\", {\n  title: \"Arrival and Departure Delay in Minutes\",\n  type: \"2D\",\n  el: createElement(\"delay\"),\n  dimensions: [\n    {\n      title: \"Departure Delay\",\n      name: \"DEP_DELAY\",\n      bins: 25,\n      extent: [-20, 60],\n      format: \"d\"\n    },\n    {\n      title: \"Arrival Delay\",\n      name: \"ARR_DELAY\",\n      bins: 25,\n      extent: [-20, 60],\n      format: \"d\"\n    }\n  ]\n});\n\nconst names = new Map<DimensionName, string>();\n\nnames.set(\"FL_DATE\", \"epoch(FL_DATE)*1000\");\n\n// get files from https://gist.github.com/domoritz/fd517a3a3a210c24a488e61870e2cf2c\nconst url = require(\"../data/flights-10m.parquet\");\nconst db = new DuckDB<ViewName, DimensionName>(url, names);\n\nnew App(views, db, {\n  config: {\n    barWidth: 600,\n    prefetchOn: \"mousedown\"\n  },\n  cb: () => (document.getElementById(\"loading\")!.style.display = \"none\")\n});\n","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"gOMU6\")).toString();"],"names":["$21c209811a9b5a39$export$6503ec6e8aabbaf","$21c209811a9b5a39$export$f7ad0328861e2f03","$21c209811a9b5a39$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","document","getElementById","innerText","$94b169114b233dc0$var$views","Map","set","title","type","el","$7FriB","createElement","dimension","name","bins","extent","Date","getTime","format","time","dimensions","$94b169114b233dc0$var$names","$0201d623fb4b32ec$exports","URL","resolve","import","meta","url","toString","$94b169114b233dc0$var$db","$c2Y2V","DuckDB","App","config","barWidth","prefetchOn","cb","style","display"],"version":3,"file":"index.422d84c8.js.map"}